===============
_empty_.C#m2().
===============
--- metac
+++ metacp
                       tag: PUBLIC
                       symbol: ""
-                    owner: "_empty_.C#m2()."
+                    owner: ""
                     language: SCALA
               tag: PUBLIC
               symbol: ""
-            owner: "_empty_.C#m2()."
+            owner: ""
             language: SCALA


===========
advanced.D#
===========
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local19"
+                    symbol: "advanced.D#_#"
             declarations {
               hardlinks {
-                symbol: "local19"
+                symbol: "advanced.D#_#"
                 kind: TYPE
                 properties: 4
                 name: "_"
       symlinks: "advanced.D#[CC]"
     declarations {
+      symlinks: "advanced.D#_#"
       symlinks: "advanced.D#`<init>`()."


==========================
advanced.Existential#e1().
==========================
--- metac
+++ metacp
               typeRef {
                 prefix {
-                symbol: "local12"
+                symbol: "local0"
         declarations {
           hardlinks {
-            symbol: "local12"
+            symbol: "local0"
             kind: TYPE
             properties: 4
             name: "_"
               tag: PUBLIC
               symbol: ""
-            owner: "advanced.Existential#e1()."
+            owner: ""
             language: SCALA


==========================
advanced.Existential#e2().
==========================
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local13"
+                    symbol: "local1"
             declarations {
               hardlinks {
-                symbol: "local13"
+                symbol: "local1"
                 kind: TYPE
                 properties: 4
                 name: "T"
                   tag: PUBLIC
                   symbol: ""
-                owner: "advanced.Existential#e2()."
+                owner: ""
                 language: SCALA


==========================
advanced.Existential#e4().
==========================
--- metac
+++ metacp
           typeRef {
             prefix {
-            symbol: "local15"
+            symbol: "local2"
             type_arguments {
               typeRef {
                 prefix {
         declarations {
           hardlinks {
-            symbol: "local15"
+            symbol: "local2"
             kind: TYPE
             properties: 4
             name: "U"
                 type_parameters {
                   hardlinks {
-                    symbol: "local16"
+                    symbol: "local3"
                     kind: TYPE_PARAMETER
                     properties: 0
                     name: "T"
                       tag: PUBLIC
                       symbol: ""
-                    owner: "local15"
+                    owner: ""
                     language: SCALA
               tag: PUBLIC
               symbol: ""
-            owner: "advanced.Existential#e4()."
+            owner: ""
             language: SCALA


=========================
advanced.Structural#s1().
=========================
--- metac
+++ metacp
               tag: PUBLIC
               symbol: ""
-            owner: "local1"
+            owner: ""
             language: SCALA


=========================
advanced.Structural#s2().
=========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local2"
+            symbol: "local1"
             kind: METHOD
             properties: 1024
             name: "x"
               tag: PUBLIC
               symbol: ""
-            owner: "local3"
+            owner: ""
             language: SCALA


=========================
advanced.Structural#s3().
=========================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local6"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "m"
                 parameterLists {
                   hardlinks {
-                    symbol: "local7"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     name: "x"
                       tag: PUBLIC
                       symbol: ""
-                    owner: "local6"
+                    owner: ""
                     language: SCALA
               tag: PUBLIC
               symbol: ""
-            owner: "local8"
+            owner: ""
             language: SCALA


===================
advanced.Test.e2().
===================
--- metac
+++ metacp
                   typeRef {
                     prefix {
-                    symbol: "local13"
+                    symbol: "advanced.Test.T#"
             declarations {
               hardlinks {
-                symbol: "local13"
+                symbol: "advanced.Test.T#"
                 kind: TYPE
                 properties: 4
                 name: "T"
                   tag: PUBLIC
                   symbol: ""
-                owner: "advanced.Existential#e2()."
+                owner: "advanced.Test."
                 language: SCALA


===================
advanced.Test.s1().
===================
--- metac
+++ metacp
               tag: PUBLIC
               symbol: ""
-            owner: "local1"
+            owner: ""
             language: SCALA


===================
advanced.Test.s2().
===================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local2"
+            symbol: "local1"
             kind: METHOD
             properties: 1024
             name: "x"
               tag: PUBLIC
               symbol: ""
-            owner: "local3"
+            owner: ""
             language: SCALA


===================
advanced.Test.s3().
===================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local6"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "m"
                 parameterLists {
                   hardlinks {
-                    symbol: "local7"
+                    symbol: "local3"
                     kind: PARAMETER
                     properties: 0
                     name: "x"
                       tag: PUBLIC
                       symbol: ""
-                    owner: "local6"
+                    owner: ""
                     language: SCALA
               tag: PUBLIC
               symbol: ""
-            owner: "local8"
+            owner: ""
             language: SCALA


============================
classes.C3#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C4#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C6#copy$default$1().
============================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


======================
classes.N.anonClass().
======================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local2"
+            symbol: "local0"
             kind: METHOD
             properties: 1024
             name: "local"
               tag: PUBLIC
               symbol: ""
-            owner: "local3"
+            owner: ""
             language: SCALA


============
example.Acc#
============
--- metac
+++ metacp
       symlinks: "example.Acc#`<init>`()."
       symlinks: "example.Acc#m1()."
       symlinks: "example.Acc#m2()."
-      symlinks: "example.Acc#m3()."
       symlinks: "example.Acc#m4()."
       symlinks: "example.Acc#m5()."
       symlinks: "example.Acc#m6()."
       symlinks: "example.Acc#m7()."
+      symlinks: "example.Acc#m3()."


==============================
example.MetacJava#nonStatic().
==============================
--- metac
+++ metacp
             string: ""
-        symbol: "com.javacp.MetacJava#StaticInner#NonStatic#"
+        symbol: "com.javacp.MetacJava.StaticInner#NonStatic#"
     type_parameters {


================================
example.MetacJava#staticInner().
================================
--- metac
+++ metacp
       typeRef {
         prefix {
-        symbol: "com.javacp.MetacJava#StaticInner#"
+        symbol: "com.javacp.MetacJava.StaticInner#"
     type_parameters {


==========================
example.Methods#m12b().(x)
==========================
--- metac
+++ metacp
           tag: PUBLIC
           symbol: ""
-        owner: "local1"
+        owner: ""
         language: SCALA


=========================
example.Methods#m13().(x)
=========================
--- metac
+++ metacp
 properties: 0
 name: "x"
 tpe {
-  annotatedType {
-    tpe {
-      typeRef {
-        prefix {
-        symbol: "scala.Int#"
+  typeRef {
+    prefix {
-    annotations {
-      tpe {
-        typeRef {
-          prefix {
-          symbol: "scala.unchecked#"
+    symbol: "scala.Int#"
 accessibility {


=========================
example.Methods#m14().(x)
=========================
--- metac
+++ metacp
       typeRef {
         prefix {
-        symbol: "local2"
+        symbol: "local1"
     declarations {
       hardlinks {
-        symbol: "local2"
+        symbol: "local1"
         kind: TYPE
         properties: 4
         name: "T"
           tag: PUBLIC
           symbol: ""
-        owner: "example.Methods#m14().(x)"
+        owner: ""
         language: SCALA


================
flags.p.package.
================
--- metac
+++ metacp
       symlinks: "flags.p.package.C#"
       symlinks: "flags.p.package.T1#"
       symlinks: "flags.p.package.T2#"
+      symlinks: "flags.p.package.S#"
       symlinks: "flags.p.package.U#"
       symlinks: "flags.p.package.V#"
       symlinks: "flags.p.package.X."
       symlinks: "flags.p.package.Y#"
       symlinks: "flags.p.package.Z#"
       symlinks: "flags.p.package.AA#"
-      symlinks: "flags.p.package.S#"
       symlinks: "flags.p.package.xs1()."


=====================
flags.p.package.S#[T]
=====================
--- metac
+++ metacp
-annotations {
-  tpe {
-    typeRef {
-      prefix {
-      symbol: "scala.specialized#"
-}
 accessibility {
   tag: PUBLIC
   symbol: ""


========================
types.Test.C#annType1().
========================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann#"
-              type_arguments {
-                typeRef {
-                  prefix {
-                  symbol: "scala.Int#"


========================
types.Test.C#annType2().
========================
--- metac
+++ metacp
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann1#"
         annotations {
           tpe {
-            typeRef {
-              prefix {
-              symbol: "types.ann2#"


=============================
types.Test.C#compoundType1().
=============================
--- metac
+++ metacp
               tag: PUBLIC
               symbol: ""
-            owner: "local1"
+            owner: ""
             language: SCALA


=============================
types.Test.C#compoundType3().
=============================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local2"
+            symbol: "local1"
             kind: METHOD
             properties: 4
             name: "k"
               tag: PUBLIC
               symbol: ""
-            owner: "local3"
+            owner: ""
             language: SCALA


=============================
types.Test.C#compoundType4().
=============================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local6"
+            symbol: "local2"
             kind: METHOD
             properties: 0
             name: "k"
               tag: PUBLIC
               symbol: ""
-            owner: "local7"
+            owner: ""
             language: SCALA


=============================
types.Test.C#compoundType6().
=============================
--- metac
+++ metacp
         declarations {
           hardlinks {
-            symbol: "local10"
+            symbol: "local3"
             kind: METHOD
             properties: 0
             name: "k"
               tag: PUBLIC
               symbol: ""
-            owner: "local11"
+            owner: ""
             language: SCALA


================================
types.Test.C#existentialType1().
================================
--- metac
+++ metacp
           typeRef {
             prefix {
-            symbol: "local13"
+            symbol: "local4"
         declarations {
           hardlinks {
-            symbol: "local13"
+            symbol: "local4"
             kind: TYPE
             properties: 4
             name: "T"
               tag: PUBLIC
               symbol: ""
-            owner: "types.Test.C#existentialType1."
+            owner: ""
             language: SCALA


================================
types.Test.C#existentialType2().
================================
--- metac
+++ metacp
               typeRef {
                 prefix {
-                symbol: "local14"
+                symbol: "local5"
         declarations {
           hardlinks {
-            symbol: "local14"
+            symbol: "local5"
             kind: TYPE
             properties: 4
             name: "_"
               tag: PUBLIC
               symbol: ""
-            owner: "types.Test.C#existentialType2."
+            owner: ""
             language: SCALA


===========================
types.Test.C#singleType2().
===========================
--- metac
+++ metacp
             string: ""
-        symbol: "types.P#x()."
+        symbol: "types.P#x."
         primitive: 0
         string: ""


==============================
types.Test.Literal.javaEnum().
==============================
--- metac
+++ metacp
 properties: 1032
 name: "javaEnum"
 tpe {
-  methodType {
-    return_type {
-      singletonType {
-        tag: SYMBOL
-        prefix {
-        symbol: "java.nio.file.LinkOption#NOFOLLOW_LINKS."
-        primitive: 0
-        string: ""
-    type_parameters {
 accessibility {
   tag: PUBLIC


